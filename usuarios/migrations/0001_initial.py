# Generated by Django 4.2.21 on 2025-06-23 11:08

import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('mfa_enabled', models.BooleanField(default=False)),
                ('mfa_method', models.CharField(choices=[('totp', 'Google Authenticator - ¡Descarga la aplicación! (Recomendado para mayor seguridad)'), ('email', 'Código por correo')], default='totp', max_length=10)),
                ('rut', models.CharField(error_messages={'unique': 'Este RUT ya está registrado.'}, help_text='Formato: 12.345.678-9', max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Formato inválido. Use: 12.345.678-9', regex='^\\d{1,3}(?:\\.\\d{3}){2}-[\\dkK]$')], verbose_name='RUT')),
                ('email', models.EmailField(error_messages={'unique': 'Este correo electrónico ya está en uso.'}, max_length=254, unique=True, verbose_name='email address')),
                ('telefono', models.CharField(error_messages={'unique': 'Este número de teléfono ya está registrado.'}, max_length=15, unique=True, verbose_name='Teléfono')),
                ('nombre_completo', models.CharField(blank=True, max_length=100, verbose_name='Nombre completo')),
                ('saldo', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Saldo')),
                ('inversiones', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Inversiones')),
                ('tarjetas', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Tarjetas')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
